

type Event @model @auth(rules: [{allow: owner},  
 {allow: groups, groups: ["Admin"]},  
 {allow: groups, groups: ["User"], operations: [read]},
 {allow: public, provider: iam operations: [read]}]) {
  id: ID!
  name: String!
  description: String!
  links: Links
  type: String! @index(name: "eventByDates", queryField: "byStartingDateTime", sortKeyFields: ["startingDateTime"])
  startingDateTime: AWSDateTime! 
  endingDateTime: AWSDateTime!
  categories: [CATEGORY!]
  mainCategory: CATEGORY!
  mainPicture: AWSURL
  secondaryPictures: [AWSURL]
  location: Location!


  priceRange: PriceRange
  company: Company!
  Deal: [Deal] @hasMany
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}

type Company @model @auth(rules: [{allow: owner},  
{allow: groups, groups: ["Admin"]}, 
 {allow: groups, groups: ["User"], operations: [read]},
 {allow: public, provider: iam operations: [read]}]) {
  id: ID! 
  email: String!
  name: String!
  description: String
  phone: String
  logo: String
  categories: [CATEGORY]
  mainCategory: CATEGORY
  links: Links


  deals: [Deal] @hasMany
  events: [Event] @hasMany
  activities: [Activity] @hasMany
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}


type Activity @model @auth(rules: [{allow: owner},  
 {allow: groups, groups: ["User"], operations: [read]},
 {allow: groups, groups: ["Admin"]},
 {allow: public, provider: iam operations: [read]}]) {
  id: ID!
  name: String!
  description: String!

  company: Company
  categories: [CATEGORY!] 
  mainCategory: CATEGORY!

  priceRange: PriceRange
  location: Location!
  mainPicture: AWSURL
  secondaryPictures: [AWSURL]
  links: Links
  openHours: [Schedule!]
  Deal: [Deal] @hasMany
      owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}

type Deal @model @auth(rules: [{allow: owner},  
{allow: groups, groups: ["Admin"]}, 
 {allow: groups, groups: ["User"], operations: [read]},
 {allow: public, provider: iam operations: [read]}]) {
  id: ID!
  name: String!
  description: String!
  company: Company!

  expiresAt: String!
  redemptionTimes: [Schedule!]!

  Event: Event
  Activity: Activity

  availableQuantity: Int!
  soldQuantity: Int!

  price: Float
  currency: String
  discount: Float 

    owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}


type Links {
  mainURL: AWSURL
  storeURL: AWSURL
  facebookURL: AWSURL
  twitterURL: AWSURL
  instagramURL: AWSURL
  youtubeURL: AWSURL
}

type Schedule {
  day: Int
  timeFrom: AWSTime
  timeTo: AWSTime
}

type Location {
  lat: Float!
  lon: Float!
  streetAddress: String!
  postalCode: String
  city: String!
}

type PriceRange {
  min: Float
  max: Float
}


enum CATEGORY {
  CONCERT
  FESTIVAL
  EXPO
  SPORT
  MOTORSPORTS
  GAMES
  PARTY
  FOODDRINKS
  TRIP
  STANDUP
  FAMILY
  HEALTH
  WORKSHOP
  THEATER
  MUSEUM
  CULTURE
  NATURE
  OUTDOOR
  OTHER
}