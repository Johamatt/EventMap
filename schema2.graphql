type Name {
  fi: String!
  en: String
  sv: String
  jp: String
  es: String
  de: String
}

type Description {
  fi: String!
  en: String
  sv: String
  jp: String
  es: String
  de: String
}

type OpenDays {
  day: Int
  timeFrom: AWSTime
  timeTo: AWSTime
}

type Links {
  eventURL: AWSURL
  otherURL: AWSURL
  storeURL: AWSURL
  facebookURL: AWSURL
  twitterURL: AWSURL
  instagramURL: AWSURL
  youtubeURL: AWSURL
}

type Location {
  lat: Float!
  lon: Float!
  streetAddress: String
  postalCode: String
  city: String
  country: String
}

type Event @model @auth(rules: [{allow: owner},  
 {allow: groups, groups: ["Admin"]},  
 {allow: groups, groups: ["DefaultUser"], operations: [read]},
 {allow: public, provider: iam operations: [read]}]) {
  id: ID!
  startingDateTime: String! @index(name: "byStartingDateTimeAndEndingDateTime", sortKeyFields: ["endingDateTime"], queryField: "eventByDates")
  endingDateTime: String!
  location: Location!
  category: [CATEGORY!] 
  company: Company
  MainPicture: String
  eventPictures: [String]
  Descriptions: Description!
  name: Name!
  Links: Links
  source: String
  website: String
  updated_at_Source: AWSDateTime
  ageRestriction: String
  isFree: Boolean
  Ticket: [Ticket] @hasMany
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}

type Ticket @model @auth(rules: [{allow: owner},  
{allow: groups, groups: ["Admin"]}, 
 {allow: groups, groups: ["DefaultUser"], operations: [read]},
 {allow: public, provider: iam operations: [read]}]) {
  name: String
  price: Float
  currency: String
  description: String
  available: String
  startSaleDate: String
  endSaleDate: String
  type: String
  Offer: [Offer] @hasMany
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}


type Company @model @auth(rules: [{allow: owner},  
{allow: groups, groups: ["Admin"]}, 
 {allow: groups, groups: ["DefaultUser"], operations: [read]},
 {allow: public, provider: iam operations: [read]}]) {
  businessId: ID! @primaryKey
  email: String
  industry: String
  phone: String
  name: String
  website: String
  events: [Event] @hasMany
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}

type User @model @auth(rules: [{allow: owner},  
 {allow: groups, groups: ["Admin"]}]) {
  id: ID!
  name: String!
  email: String! 
  profilePicture: String
  birthday: AWSDate
  friends: [User] @hasMany
  favouriteEvents: [Event] @hasMany
  favouriteCompanies: [Company] @hasMany
  tokens: Int
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}


type Offer @model @auth(rules: [{allow: owner},  
{allow: groups, groups: ["Admin"]}]) {
  id: ID!
  name: String!
  description: String
  type: OfferType!
  coinCost: Int!
  value: Float
  discount: Float 
  bundleSize: Int 
  gift: String
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}


enum OfferType {
  DISCOUNT
  BUNDLE
  GIFT
}

enum CATEGORY {
  MUSIC
  FESTIVAL
  SPORT
  PARTIESNIGHTLIFE
  KIDS
  FAMILY
  HEALTH
  TRIP
  FOOD
  WORKSHOP
  COOKING
  BUSINESS
  ACTIVITY
  CULTURE
  COMEDY
  CONCERT
  PERFORMANCE
  FINEARTS
  THEATRE
  LITERATURE
  PHOTOGRAPHY
  TECHNOLOGY
  MARKET
  SIGHTSEEING
  MUSEUM
  OTHER
  ACCOMMODATION
  NATURE
  MOTORSPORTS
  LUXURY
  GUIDEDSERVICE
  SAUNA
  ANIMALS
  EDUCATION
  SCIENCE
  FASHION
  TOUR
  DANCE
  BOARDGAMES
  VIDEOGAMES
  GAMBLING
}