type Name {
  fi: String!
  en: String
  sv: String
  ru: String
  jp: String
  de: String
  zh: String
  es: String
}

type Description {
  fi: String!
  en: String
  sv: String
  ru: String
  jp: String
  de: String
  zh: String
  es: String
}



type ActivityMedia @model @auth(rules: [{allow: owner, operations: [create, read, update, delete]}, {allow: groups, groups: ["Admin"]}, 
{allow: groups, groups: ["DefaultUser"], operations: [read]}, {allow: public, operations: [read]}]) {
  id: ID!
  kind: String
  copyright: String
  name: String
  URL: AWSURL!
}

type EventMedia @model @auth(rules: [{allow: owner, operations: [create, read, update, delete]}, {allow: groups, groups: ["Admin"]}, {allow: groups, groups: ["DefaultUser"], operations: [read]}, {allow: public, operations: [read]}]) {
  id: ID!
  URL: AWSURL!
  kind: String
  copyright: String
  name: String
}

type Location {
  lat: Float!
  lon: Float!
  streetAddress: String
  postalCode: String
}

type Event @model @auth(rules: [{allow: owner, operations: [create, read, update, delete]}, {allow: groups, groups: ["Admin"]},  {allow: groups, groups: ["DefaultUser"], operations: [read]},{allow: public, operations: [read]}]) {
  id: ID!
  startingDateTime: String!
  endingDateTime: String!
  location: Location!
  category: [CATEGORY!]
  company: Company
  eventMedia: [EventMedia] @hasMany
  Descriptions: Description!
  name: Name!
  Links: Links
  source: String
  updated_at_Source: AWSDateTime
}


type Company @model @auth(rules: [{allow: owner, operations: [create, read, update, delete]}, {allow: groups, groups: ["Admin"]},  {allow: groups, groups: ["DefaultUser"], operations: [read]},{allow: public, operations: [read]}]) {
  businessId: ID! @primaryKey
  email: String
  phone: String
  name: String
  activities: [Activity] @hasMany
  events: [Event] @hasMany
}


enum CATEGORY {
  MUSIC
  FESTIVAL
  SPORT
  PARTIESNIGHTLIFE
  KIDS
  FAMILY
  HEALTH
  TRIP
  FOOD
  WORKSHOP
  COOKING
  BUSINESS
  ACTIVITY
  CULTURE
  COMEDY
  CONCERT
  PERFORMANCE
  FINEARTS
  THEATRE
  LITERATURE
  PHOTOGRAPHY
  TECHNOLOGY
  MARKET
  SIGHTSEEING
  MUSEUM
  OTHER
  ACCOMMODATION
  NATURE
  MOTORSPORTS
  LUXURY
  GUIDEDSERVICE
  SAUNA
  ANIMALS
  EDUCATION
  SCIENCE
  FASHION
  TOUR
  DANCE
  BOARDGAMES
  VIDEOGAMES
  GAMBLING
}

type Activity @model @auth(rules: [{allow: owner, operations: [create, read, update, delete]},  {allow: groups, groups: ["DefaultUser"], operations: [read]},{allow: groups, groups: ["Admin"]}, {allow: public, provider: iam operations: [read]}]) {
  id: ID!
  company: Company
  duration: String
  durationType: String
  meantFor: [String]
  categories: [CATEGORY!]
  price: Price
  Location: Location!
  activityMedia: [ActivityMedia] @hasMany
  Descriptions: Description!
  Names: Name!
  Links: Links
  source: String
  updated_at_Source: AWSDateTime
  OpenDays: [OpenDays!] ## 
  availableDays: [Int]  #  TODO: Custom resolver
  availableMonths: [Int]##
  raiting: Float
  user_raitings_total: Int
}

type Links {
  siteURL: AWSURL
  otherURL: AWSURL
}

type Price {
  EurFrom: Float
  EurTo: Float
  pricingtype: [PRICINGTYPE]
}

enum PRICINGTYPE {
  FREE
  CHARGEABLE
}

type OpenDays {
  day: Int
  timeFrom: AWSTime
  timeTo: AWSTime
}



